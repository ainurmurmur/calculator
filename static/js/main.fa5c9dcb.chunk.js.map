{"version":3,"sources":["Components/Calc.module.css","Components/Material.jsx","Components/Calc.jsx","Components/Reducer.jsx","Components/CalcContainer.jsx","Components/redux-store.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ButtonMaterial","withStyles","root","background","borderRadius","border","color","height","width","label","textTransform","Button","DeleteIcon","Calc","props","CalcButtons","myClass","val","className","id","styles","btnR","type","onClick","handleInput","style","Typography","variant","firstOperand","secondOperand","operator","addStr","str","addSecond","addFirst","addOperator","answer","addAnswer","e","numbers","symbols","includes","document","getElementById","value","percent","parseFloat","toString","i","squareRoot","Math","sqrt","alert","parseInt","BlockMain","disabled","BlockTop","BlockBottom","BlockLeft","squreroot","clear","number","dot","BlockRight","equal","calculate","plus","minus","multiply","divide","initialState","CalcReducer","state","action","connect","calc","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fa5c9dcb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BlockMain\":\"Calc_BlockMain__2ia6s\",\"BlockTop\":\"Calc_BlockTop__2QAs9\",\"BlockBottom\":\"Calc_BlockBottom__24vUD\",\"BlockRight\":\"Calc_BlockRight__1QBJs\",\"BlockLeft\":\"Calc_BlockLeft__22TKB\",\"clear\":\"Calc_clear__1Aq3e\",\"equal\":\"Calc_equal__26UlV\",\"squreroot\":\"Calc_squreroot__YzFmw\",\"percent\":\"Calc_percent__92DLZ\",\"multiply\":\"Calc_multiply__JBl_p\",\"divide\":\"Calc_divide__3sOLv\",\"plus\":\"Calc_plus__1nusM\",\"minus\":\"Calc_minus__2f6Uo\"};","import Button from '@material-ui/core/Button';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport const ButtonMaterial = withStyles({\r\n    root: {\r\n        background: 'linear-gradient(40deg, #orchid 50%, #purple 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: '105px',\r\n        width: '100px',\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n})(Button);\r\n\r\n\r\nexport const ButtonDeleteStyled = withStyles({\r\n    root: {\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'red',\r\n    },\r\n})(DeleteIcon);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './Calc.module.css';\r\nimport {ButtonMaterial} from './Material'\r\nimport {Typography} from '@material-ui/core'\r\nimport 'fontsource-roboto';\r\n\r\n\r\nfunction Calc(props) {\r\n\r\n    let CalcButtons = ({myClass, val}) => {\r\n\r\n        return (\r\n            <div className={myClass}>\r\n                <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput(val)} style={style}>\r\n                    <Typography variant={'h4'}>{val}</Typography>\r\n                </ButtonMaterial>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let calculate = ({str, firstOperand, secondOperand, operator, addStr}) => {\r\n\r\n        document.getElementById('calcArea').value = str;\r\n\r\n        if (operator === '+') {\r\n            addStr(+firstOperand + +secondOperand);\r\n        } else if (operator === '-') {\r\n            addStr(+firstOperand - +secondOperand)\r\n        } else if (operator === '*') {\r\n            addStr(+firstOperand * +secondOperand)\r\n        } else if (operator === '/') {\r\n            addStr(+firstOperand / +secondOperand)\r\n        }\r\n        return secondOperand;\r\n    }\r\n\r\n    const style = {\r\n\r\n        width: 'auto',\r\n        height: '95px'\r\n    };\r\n\r\n    let {firstOperand, secondOperand, operator, addStr, str, addSecond, addFirst, addOperator, answer, addAnswer} = props;\r\n\r\n    let handleInput = (e) => {\r\n\r\n        let numbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '.', '%', 'âˆš'];\r\n        let symbols = ['+', '-', '*', '/']\r\n\r\n        //first\r\n        if (numbers.includes(e) && operator === '') {\r\n            addFirst(e);\r\n            addStr(firstOperand);\r\n            document.getElementById('calcArea').value = str;\r\n            addStr(firstOperand + e);\r\n            addFirst(firstOperand + e);\r\n            if (e === '%') {\r\n                let percent = parseFloat(firstOperand) / 100;\r\n                addStr(percent.toString());\r\n                addFirst(percent.toString());\r\n            }\r\n            if (e === 'âˆš') {\r\n                let i = parseFloat(firstOperand);\r\n                let squareRoot = Math.sqrt(i)\r\n                addStr(squareRoot.toString());\r\n                addFirst(squareRoot.toString());\r\n            }\r\n        }\r\n        //operator\r\n        else if (!numbers.includes(e) && symbols.includes(e)) {\r\n            if (operator && answer === '') {\r\n                alert('please enter only two operands, no more')\r\n            }\r\n            if (!operator) {\r\n                addOperator(e);\r\n                addStr(firstOperand + e);\r\n                document.getElementById('calcArea').value = str;\r\n            }\r\n            if (operator && parseInt(str) === answer) {\r\n                addFirst(answer.toString());\r\n                addSecond('');\r\n                addOperator(e);\r\n                addStr(answer.toString() + e);\r\n                document.getElementById('calcArea').value = str;\r\n                addAnswer('')\r\n            }\r\n        }\r\n        //second\r\n        else if (numbers.includes(e) && symbols.includes(operator)) {\r\n\r\n            addSecond(e);\r\n            addStr(firstOperand + operator + e);\r\n            document.getElementById('calcArea').value = str;\r\n            addStr(firstOperand + operator + secondOperand + e);\r\n            addSecond(secondOperand + e);\r\n            if (e === '%') {\r\n                let percent = parseFloat(secondOperand) / 100;\r\n                addStr(firstOperand + operator + percent.toString());\r\n                addSecond(percent.toString());\r\n            }\r\n            if (e === 'âˆš') {\r\n                let i = parseFloat(secondOperand);\r\n                let squareRoot = Math.sqrt(i)\r\n                addStr(firstOperand + operator + squareRoot.toString());\r\n                addSecond(squareRoot.toString());\r\n            }\r\n        } else if (e === 'c') {\r\n            addStr('');\r\n            addAnswer('')\r\n            addSecond('')\r\n            addFirst('')\r\n            addOperator('')\r\n        } else {\r\n            return str\r\n        }\r\n    }\r\n    return (\r\n        <div className={styles.BlockMain}>\r\n            <input value={str} id={'calcArea'} disabled className={styles.BlockTop}/>\r\n            <div className={styles.BlockBottom}>\r\n                <div className={styles.BlockLeft}>\r\n                    <CalcButtons val={'%'} myClass={styles.percent}/>\r\n                    <CalcButtons val={'âˆš'} myClass={styles.squreroot}/>\r\n                    <CalcButtons val={'c'} myClass={styles.clear}/>\r\n                    <CalcButtons val={'7'} myClass={styles.number}/>\r\n                    <CalcButtons val={'8'} myClass={styles.number}/>\r\n                    <CalcButtons val={'9'} myClass={styles.number}/>\r\n                    <CalcButtons val={'4'} myClass={styles.number}/>\r\n                    <CalcButtons val={'5'} myClass={styles.number}/>\r\n                    <CalcButtons val={'6'} myClass={styles.number}/>\r\n                    <CalcButtons val={'1'} myClass={styles.number}/>\r\n                    <CalcButtons val={'2'} myClass={styles.number}/>\r\n                    <CalcButtons val={'3'} myClass={styles.number}/>\r\n                    <CalcButtons val={'0'} myClass={styles.number}/>\r\n                    <CalcButtons val={'.'} myClass={styles.dot}/>\r\n                </div>\r\n                <div className={styles.BlockRight}>\r\n                    <div className={styles.equal}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit'\r\n                                        onClick={() => calculate(props)}\r\n                                        style={style}>\r\n                            <Typography variant={'h4'}>{'='}</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <CalcButtons val={'+'} myClass={styles.plus}/>\r\n                    <CalcButtons val={'-'} myClass={styles.minus}/>\r\n                    <CalcButtons val={'*'} myClass={styles.multiply}/>\r\n                    <CalcButtons val={'/'} myClass={styles.divide}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calc;\r\n","const ADD_FIRST_OPERAND = 'ADD_FIRST_OPERAND'\r\nconst ADD_SECOND_OPERAND = 'ADD_SECOND_OPERAND'\r\nconst ADD_OPERATOR = 'ADD_OPERATOR'\r\nconst ADD_STR = 'ADD_STR'\r\nconst ADD_ANSWER = 'ADD_ANSWER'\r\n\r\nlet initialState = {\r\n\r\n    str: '',\r\n    firstOperand: '',\r\n    secondOperand: '',\r\n    operator: '',\r\n    answer: null\r\n\r\n}\r\n\r\nlet CalcReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_FIRST_OPERAND: {\r\n            return {...state, firstOperand: action.firstOperand}\r\n        }\r\n        case ADD_SECOND_OPERAND: {\r\n            return {...state, secondOperand: action.secondOperand}\r\n        }\r\n        case ADD_OPERATOR: {\r\n            return {...state, operator: action.operator}\r\n        }\r\n        case ADD_STR: {\r\n            return {...state, str: action.str}\r\n        }\r\n        case ADD_ANSWER: {\r\n            return {...state, answer: action.answer}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addFirst = (firstOperand) => ({type: ADD_FIRST_OPERAND, firstOperand})\r\nexport const addSecond = (secondOperand) => ({type: ADD_SECOND_OPERAND, secondOperand})\r\nexport const addOperator = (operator) => ({type: ADD_OPERATOR, operator})\r\nexport const addStr = (str) => ({type: ADD_STR, str})\r\nexport const addAnswer = (answer) => ({type: ADD_ANSWER, answer})\r\n\r\nexport default CalcReducer;","import React from 'react';\r\nimport Calc from './Calc'\r\nimport {addFirst, addSecond, addOperator, addStr, addAnswer} from './Reducer'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nexport const CalcContainer = (props) => {\r\n\r\n    return <Calc addFirst={props.addFirst} addSecond={props.addSecond} addOperator={props.addOperator}\r\n                 str={props.str} firstOperand={props.firstOperand} secondOperand={props.secondOperand}\r\n                 operator={props.operator} addStr={props.addStr} answer={props.answer} addAnswer={props.addAnswer}\r\n    />\r\n}\r\nlet mapStateToProps = (state) => ({\r\n\r\n    str: state.calc.str,\r\n    firstOperand: state.calc.firstOperand,\r\n    secondOperand: state.calc.secondOperand,\r\n    operator: state.calc.operator,\r\n    answer: state.calc.answer\r\n})\r\n\r\nexport default connect(mapStateToProps,\r\n    {addFirst, addSecond, addOperator, addStr, addAnswer})\r\n(CalcContainer)\r\n\r\n","import {createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {compose} from 'redux';\r\nimport CalcReducer from './Reducer.jsx';\r\n\r\nlet reducers = combineReducers({\r\n\r\n    calc: CalcReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\nexport default store;\r\n\r\n// form:formReducer,","import React from 'react';\nimport  './App.css';\nimport CalcContainer from './Components/CalcContainer.jsx'\nimport { Provider } from 'react-redux'\nimport store from '../src/Components/redux-store';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <Provider store={store}>\n     <CalcContainer />\n     </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}