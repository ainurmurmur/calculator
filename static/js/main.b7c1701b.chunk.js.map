{"version":3,"sources":["Components/Calc.module.css","Components/Calc.jsx","Components/Material.jsx","Components/Reducer.jsx","Components/CalcContainer.jsx","Components/redux-store.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Calc","props","style","width","Calculate","operator","firstOperand","secondOperand","handleInput","e","numbers","symbols","includes","addFirst","addStr","document","getElementById","value","str","percent","parseFloat","toString","i","squareRoot","Math","sqrt","answer","alert","addOperator","parseInt","addSecond","addAnswer","console","log","a","eval","className","styles","BlockMain","id","disabled","BlockTop","BlockBottom","BlockLeft","btnR","type","onClick","variant","squreroot","clear","seven","eight","nine","four","five","six","one","two","three","zero","dot","BlockRight","equal","plus","minus","multiply","divide","ButtonMaterial","withStyles","root","background","borderRadius","border","color","height","label","textTransform","Button","DeleteIcon","initialState","CalcReducer","state","action","connect","calc","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b7c1701b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BlockMain\":\"Calc_BlockMain__2ia6s\",\"BlockTop\":\"Calc_BlockTop__2QAs9\",\"BlockBottom\":\"Calc_BlockBottom__24vUD\",\"BlockRight\":\"Calc_BlockRight__1QBJs\",\"BlockLeft\":\"Calc_BlockLeft__22TKB\",\"clear\":\"Calc_clear__1Aq3e\",\"equal\":\"Calc_equal__26UlV\",\"squreroot\":\"Calc_squreroot__YzFmw\",\"percent\":\"Calc_percent__92DLZ\",\"multiply\":\"Calc_multiply__JBl_p\",\"divide\":\"Calc_divide__3sOLv\",\"plus\":\"Calc_plus__1nusM\",\"minus\":\"Calc_minus__2f6Uo\"};","import React from 'react';\r\nimport styles from './Calc.module.css';\r\nimport { ButtonMaterial } from './Material'\r\nimport { Typography } from '@material-ui/core'\r\nimport 'fontsource-roboto';\r\nimport  { useState } from 'react';\r\n\r\n\r\n\r\n// let firstOperand ='';\r\n// let secondOperand = '';\r\n// let number = ['1','2','3','4','5','6','7','8','9', '0'];\r\n// let operator = ['-', '+', '*', '/'];\r\n\r\n \r\n// function calculate(firstOperand, secondOperand, operator) {\r\n//     if (operator === '+') {\r\n//       return firstOperand + secondOperand;\r\n//     } else if (operator === '-') {\r\n//       return firstOperand - secondOperand;\r\n//     } else if (operator === '*') {\r\n//       return firstOperand * secondOperand;\r\n//     } else if (operator === '/') {\r\n//       return firstOperand / secondOperand;\r\n//     }\r\n  \r\n//     return secondOperand;\r\n//   }\r\n// let obj = { \r\n//     str : '',\r\n//     firstOperand : '0',\r\n//     secondOperand : '0',\r\n//     operator : ['-', '+', '*', '/']\r\n//  }\r\n// let str = '';\r\n// let firstOperand = 0;\r\n// let secondOperand = 0;\r\n// let operator = ['-', '+', '*', '/'];\r\n\r\nfunction Calc(props) {\r\n\r\n    const style = {\r\n        \r\n        width: 'auto'\r\n      };\r\n    // let handleInput =(e)=> {\r\n    //     // let answer  = e;\r\n    // // //    let val = document.getElementById(\"calcArea\");\r\n    // //    var elem = document.querySelector(\"calcArea\");\r\n    // //    elem.firstOperand = answer;\r\n\r\n    //     // props.firstOperand = e;\r\n\r\n       \r\n    //     props.addFirst(e);\r\n    //     document.getElementById('calcArea').value=props.firstOperand ;\r\n    //     props.addFirst(props.firstOperand + e);\r\n\r\n\r\n    //     if(e==='+'){\r\n    //         props.addOperator(e)\r\n    //         document.getElementById('calcArea').value=props.operator ;\r\n    //         props.addStr(props.firstOperand + e)\r\n            \r\n    //     }\r\n    //     // console.log(a);\r\n    //     // console.log(typeof(a))\r\n    //     if (e === '+' && document.getElementById('calcArea').value.includes('+')) {\r\n    //         props.addOperator(e);\r\n    //         props.addOperator(props.operator + e);\r\n    //         if(e==='+'){\r\n    //             props.addOperand(e)\r\n    //             props.addOperand(props.firstOperand + e)\r\n    //         }\r\n    //         if(document.getElementById('calcArea').value.includes('+')) {\r\n    //             props.addSecond(e)\r\n    //             document.getElementById('calcArea').value=props.secondOperand \r\n    //             props.addFirst(props.secondOperand + e)\r\n    //         }\r\n    //         console.log(props.secondOperand)\r\n    //         }\r\n\r\n    //         if(e === '='){\r\n    //            calculate(props.firstOperand, props.secondOperand, props.operand);\r\n    //         } \r\n    //     function calculate(firstOperand, secondOperand, operator) {\r\n    //             if (operator === '+') {\r\n    //                return firstOperand + secondOperand;\r\n    //               } else if (operator === '-') {\r\n    //                return firstOperand - secondOperand;\r\n    //                 } else if (operator === '*') {\r\n    //                   return firstOperand * secondOperand;\r\n    //                 } else if (operator === '/') {\r\n    //                   return firstOperand / secondOperand;\r\n    //                 }\r\n                \r\n    //                 return secondOperand;\r\n    //               }\r\n    // }\r\n    let Calculate = (props) => {\r\n\r\n        if (props.operator === '+') {\r\n          return props.firstOperand + props.secondOperand;\r\n        } else if (props.operator === '-') {\r\n          return props.firstOperand - props.secondOperand;\r\n        } else if (props.operator === '*') {\r\n          return props.firstOperand * props.secondOperand;\r\n        } else if (props.operator === '/') {\r\n          return props.firstOperand /props.secondOperand;\r\n        }\r\n      \r\n        return props.secondOperand;\r\n\r\n      }\r\n\r\n    let handleInput =(e)=> {\r\n     \r\n        let numbers=['1','2','3','4','5','6','7','8','9','0','.','%','√'];\r\n        let symbols =['+', '-', '*', '/']\r\n        // props.addFirst(e);\r\n        // document.getElementById('calcArea').value=props.firstOperand ;\r\n        // props.addStr(props.firstOperand+e);\r\n        // props.addFirst(props.firstOperand + e);\r\n       //first\r\n        if( numbers.includes(e) && props.operator===''){\r\n            props.addFirst(e);\r\n            props.addStr(props.firstOperand);\r\n            document.getElementById('calcArea').value=props.str;\r\n            props.addStr(props.firstOperand+e);\r\n            props.addFirst(props.firstOperand + e);\r\n            if(e ==='%'){\r\n                let percent = parseFloat(props.firstOperand) / 100;\r\n                props.addStr(percent.toString());\r\n                props.addFirst(percent.toString());\r\n            }\r\n            if(e ==='√'){\r\n                let i = parseFloat(props.firstOperand);\r\n                let squareRoot =  Math.sqrt(i)\r\n                props.addStr(squareRoot.toString());\r\n                props.addFirst(squareRoot.toString());\r\n            }\r\n            //props.addStr(props.firstOperand+e);\r\n            // props.addFirst(props.firstOperand + e);\r\n           \r\n        }\r\n        //operator\r\n        else if (!numbers.includes(e) && symbols.includes(e)){\r\n            if(props.operator && props.answer===''){\r\n                alert('please enter only two operands, no more')\r\n            }\r\n            if(!props.operator){\r\n            props.addOperator(e);\r\n            props.addStr(props.firstOperand+e);\r\n            document.getElementById('calcArea').value=props.str;\r\n            }\r\n            // props.addStr(props.firstOperand+props.operator);\r\n            if(props.operator && parseInt(props.str)===props.answer){\r\n                props.addFirst(props.answer.toString());\r\n                props.addSecond('');\r\n                props.addOperator(e);\r\n                props.addStr(props.answer.toString()+e);\r\n                document.getElementById('calcArea').value=props.str;\r\n                props.addAnswer('')\r\n            }\r\n         \r\n           \r\n        }\r\n        //second\r\n        else if (numbers.includes(e) && symbols.includes(props.operator)) {\r\n            \r\n    \r\n            props.addSecond(e);\r\n            props.addStr(props.firstOperand+props.operator+e);\r\n            document.getElementById('calcArea').value=props.str;\r\n            props.addStr(props.firstOperand+props.operator+props.secondOperand+e);\r\n            props.addSecond(props.secondOperand+e);\r\n            if(e ==='%'){\r\n                let percent = parseFloat(props.secondOperand) / 100;\r\n                props.addStr(props.firstOperand+props.operator+percent.toString());\r\n                props.addSecond(percent.toString());\r\n            }\r\n            if(e ==='√'){\r\n                let i = parseFloat(props.secondOperand);\r\n                let squareRoot =  Math.sqrt(i)\r\n                props.addStr(props.firstOperand+props.operator+squareRoot.toString());\r\n                props.addSecond(squareRoot.toString());\r\n            }\r\n           \r\n        }\r\n        else if (e==='='){\r\n            console.log(e)\r\n            props.addStr(props.str+e);\r\n            let a = eval(props.str)\r\n            props.addAnswer(a);\r\n            props.addStr(a.toString());\r\n            console.log(props.answer)\r\n            document.getElementById('calcArea').value=props.str;\r\n            \r\n          // return <Calculate operator={props.operator} secondOperand={props.secondOperand} firstOperand={props.firstOperand} />;\r\n          \r\n        }\r\n        else if (e==='c'){\r\n            props.addStr('');\r\n            props.addAnswer('')\r\n            props.addSecond('')\r\n            props.addFirst('')\r\n            props.addOperator('')\r\n        }\r\n       \r\n        else {\r\n            return props.str\r\n           \r\n         }\r\n        \r\n    }\r\n    return (\r\n        <div className={styles.BlockMain}>\r\n        \r\n      \r\n                   <input value={props.str} id={'calcArea'}   disabled className={styles.BlockTop}/>\r\n            \r\n            \r\n            <div className={styles.BlockBottom}>\r\n                <div className={styles.BlockLeft}>\r\n                    <div className={styles.percent}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('%')} style={style}>\r\n                            <Typography variant='h4'>%</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div className={styles.squreroot}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('√')} style={style}>\r\n                            <Typography variant='h4'>√</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div className={styles.clear}>\r\n                         <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('c')} style={style}>\r\n                            <Typography variant='h4'>c</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div className={styles.seven}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('7')} style={style}>\r\n                            <Typography variant='h4'>7</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div className={styles.eight}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit'  onClick={() => handleInput('8')} style={style}>\r\n                            <Typography variant='h4'>8</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div className={styles.nine}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('9')} style={style}>\r\n                            <Typography variant='h4'>9</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div className={styles.four}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('4')} style={style}>\r\n                            <Typography variant='h4'>4</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div className={styles.five}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('5')} style={style}>\r\n                            <Typography variant='h4'>5</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div className={styles.six}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('6')} style={style}>\r\n                            <Typography variant='h4'>6</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div className={styles.one}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('1')} style={style}>\r\n                            <Typography variant='h4'>1</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div className={styles.two}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('2')} style={style}>\r\n                            <Typography variant='h4'>2</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div className={styles.three}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('3')} style={style}>\r\n                            <Typography variant='h4'>3</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div className={styles.zero}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('0')} style={style}>\r\n                            <Typography variant='h4'>0</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div>\r\n                    </div>\r\n                    <div className={styles.dot}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('.')} style={style}>\r\n                            <Typography variant='h4'>.</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.BlockRight}>\r\n                <div className={styles.equal}>\r\n                         <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('=')} style={style}>\r\n                            <Typography variant='h4'>=</Typography>\r\n                        </ButtonMaterial>\r\n                     </div>\r\n                    <div className={styles.plus}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('+')} style={style}>\r\n                            <Typography variant='h4'>+</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div className={styles.minus}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('-')} style={style}>\r\n                            <Typography variant='h4'>-</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div className={styles.multiply}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('*')} style={style}>\r\n                            <Typography variant='h4'>*</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                    <div className={styles.divide}>\r\n                        <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('/')} style={style}>\r\n                            <Typography variant='h4'>/</Typography>\r\n                        </ButtonMaterial>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calc;\r\n\r\n\r\n// <div className={styles.equal}>\r\n//                         <ButtonMaterial id={styles.btnR} type='submit' onClick={() => handleInput('=')}>\r\n//                             <Typography variant='h4'>=</Typography>\r\n//                         </ButtonMaterial>\r\n//                     </div>","import Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport const ButtonMaterial = withStyles({\r\n    root: {\r\n      background: 'linear-gradient(40deg, #orchid 50%, #purple 90%)',\r\n      borderRadius: 3,\r\n      border: 0,\r\n      color: 'white',\r\n      height: '105px',\r\n      width: '100px',\r\n    },\r\n    label: {\r\n      textTransform: 'capitalize',\r\n    },\r\n  })(Button);\r\n\r\n  \r\nexport const ButtonDeleteStyled = withStyles({\r\n    root: {\r\n      borderRadius: 3,\r\n      border: 0,\r\n     color: 'red',\r\n    },\r\n  })(DeleteIcon);\r\n\r\n\r\n\r\n","\r\nconst ADD_FIRST_OPERAND ='ADD_FIRST_OPERAND'\r\nconst ADD_SECOND_OPERAND ='ADD_SECOND_OPERAND'\r\nconst ADD_OPERATOR ='ADD_OPERATOR'\r\nconst ADD_STR ='ADD_STR'\r\nconst ADD_ANSWER='ADD_ANSWER'\r\n\r\nlet initialState = {\r\n\r\n      str : '',\r\n      firstOperand : '',\r\n      secondOperand : '',\r\n      operator: '',\r\n      answer:null\r\n    \r\n}\r\n\r\n let CalcReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_FIRST_OPERAND: {\r\n           return {...state, firstOperand:action.firstOperand} \r\n        }\r\n        case ADD_SECOND_OPERAND: {\r\n            return {...state,  secondOperand:action.secondOperand} \r\n         }\r\n         case ADD_OPERATOR: {\r\n            return {...state, operator:action.operator} \r\n         }\r\n         case ADD_STR: {\r\n            return {...state, str:action.str} \r\n         }\r\n         case ADD_ANSWER: {\r\n            return {...state, answer:action.answer} \r\n         }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addFirst = (firstOperand) => ( {type: ADD_FIRST_OPERAND, firstOperand} )\r\nexport const addSecond = (secondOperand) => ( {type: ADD_SECOND_OPERAND, secondOperand} )\r\nexport const addOperator = (operator) => ( {type: ADD_OPERATOR, operator} )\r\nexport const addStr = (str) => ( {type: ADD_STR, str} )\r\nexport const addAnswer = (answer) => ( {type: ADD_ANSWER, answer} )\r\n\r\nexport default CalcReducer;","import React from 'react';\r\nimport Calc from './Calc'\r\nimport { addFirst, addSecond, addOperator, addStr, addAnswer} from './Reducer'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n\r\nexport const CalcContainer = (props) => {\r\n\r\n\r\n  return <Calc addFirst={props.addFirst} addSecond={props.addSecond} addOperator={props.addOperator}\r\n           str ={props.str} firstOperand={props.firstOperand} secondOperand={props.secondOperand}\r\n           operator={props.operator} addStr={props.addStr} answer={props.answer} addAnswer={props.addAnswer}\r\n  />\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\r\n  str: state.calc.str,\r\n  firstOperand: state.calc.firstOperand,\r\n  secondOperand: state.calc.secondOperand,\r\n  operator: state.calc.operator,\r\n  answer: state.calc.answer\r\n})\r\n\r\nexport default connect(mapStateToProps, \r\n  { addFirst, addSecond, addOperator, addStr, addAnswer})\r\n(CalcContainer)\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { compose } from 'redux';\r\nimport  CalcReducer  from './Reducer.jsx';\r\n\r\nlet reducers = combineReducers({\r\n\r\n    calc: CalcReducer,\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\n\r\nwindow.store =store;\r\nexport default store;\r\n\r\n// form:formReducer,","import React from 'react';\nimport  './App.css';\nimport Calc from './Components/Calc.jsx'\nimport CalcContainer from './Components/CalcContainer.jsx'\nimport { Provider } from 'react-redux'\nimport store from '../src/Components/redux-store';\n\nfunction App() {\n  return (\n    \n    <div className=\"App\">\n        <Provider store={store}>\n     <CalcContainer />\n     </Provider>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}